Потребно е да се пронајдат и избројат сите појавувања на обликот „Х“ составен само од елементите со вредност 1. 
Обликот „Х“ е составен од 5 елементи со вредност 1 кои се соодветно распределни во матрицата (елемент со вредност 1 кој има елементи со вредност 1 како негови дијагонални соседи).

Од стандарден влез се вчитуваат димензиите на една матрица и елементите на истата. 
Потребно е да ги изброите сите појавувања на обликот „Х“ во рамките на матрицата. 
Да се претпостави дека не смее да има поклопување на елементите од два облика „Х“ (пример 2). Појавувањата на обликот „Х“ се бараат одлево-надесно и одгоре-надоле.

#include <iostream>
using namespace std;

int main() {
    int rows;
    int coulmns;
    cin >> rows >> coulmns;
    int matrix[rows][coulmns];
    int countX = 0;

    for (int i = 0; i < rows; i++) {
        for (int j = 0; j < coulmns; j++) {
            cin >> matrix[i][j];
        }
    }
    for (int i = 0; i < rows-1; i++) {
        for (int j = 0; j < coulmns-1; j++) {
            if (matrix[i][j] == 1 &&
                matrix[i+1][j] == 1 &&
                matrix[i+1][j-1] == 1 &&
                matrix[i+1][j+1] == 1 &&
                matrix[i+2][j] == 1) {

                countX++;

                matrix[i][j] == 0;
                matrix[i+1][j] == 0;
                matrix[i+1][j-1] == 0;
                matrix[i+1][j+1] == 0;
                matrix[i+2][j] == 0;
            }
        }
    }
    cout << countX << endl;
}
